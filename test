from IPython.display import HTML
import time
import random
import pandas as pd


#Possible colors 
fontcolor = ["FireBrick", "RoyalBlue", "Green","HotPink", "Gold", "Purple", "Grey", "Black" , "Orange" ]

namecolor = ["Red", "Blue", "Green", "Pink", "Yellow", "Purple", "Grey", "Black", "Orange"]

matchcolor = {"FireBrick":"Red", "RoyalBlue":"Blue", "Green":"Green",
              "HotPink":"Pink", "Gold": "Yellow", "Purple":"Purple",
              "Grey":"Grey","Black":"Black", "Orange":"Orange"}

namecolor_chn = ["红色", "蓝色", "绿色", "粉色", "黄色", "紫色", "灰色", "黑色", "橘色"]

matchcolor_chn = {"FireBrick":"红色", "RoyalBlue":"蓝色", "Green":"绿色",
              "HotPink":"粉色", "Gold": "黄色", "Purple":"紫色",
              "Grey":"灰色","Black":"黑色", "Orange":"橘色"}

namecolor_fre = ["Rouge", "Bleu", "Vert", "Rose", "Jaune", "Violet", "Gris", "Noir", "Orange"]

matchcolor_fre = {"FireBrick":"Rouge", "RoyalBlue":"Bleu", "Green":"Vert",
              "HotPink":"Rose", "Gold": "Jaune", "Purple":"Violet",
              "Grey":"Gris","Black":"Noir", "Orange":"Orange"}

namecolor_kor = ["빨간색", "파란색", "녹색", "분홍색", "노란색", "보라색", "회색", "검은색", "주황색"]

matchcolor_kor = {"FireBrick":"빨간색", "RoyalBlue":"파란색", "Green":"녹색",
              "HotPink":"분홍색", "Gold": "노란색", "Purple":"보라색",
              "Grey":"회색","Black":"검은색", "Orange":"주황색"}

namecolor_jap = ["赤", "青", "緑", "ピンク", "黄", "紫", "灰", "黒", "橙"]

matchcolor_jap = {"FireBrick":"赤", "RoyalBlue":"青", "Green":"緑",
              "HotPink":"ピンク", "Gold": "黄", "Purple":"紫",
              "Grey":"灰","Black":"黒", "Orange":"橙"}

namecolor_esp = ["Rojo", "Azul", "Verde", "Rosa", "Amarillo", "Púrpura", "Gris", "Negro", "Naranja"]

matchcolor_esp = {"FireBrick":"Rojo", "RoyalBlue":"Azul", "Green":"Verde",
              "HotPink":"Rosa", "Gold": "Amarillo", "Purple":"Púrpura",
              "Grey":"Gris","Black":"Negro", "Orange":"Naranja"}

namecolor_rus = ["Красный", "Синий", "Зеленый", "Розовый", "Желтый", "Фиолетовый", "Серый", "Черный", "Оранжевый"]

matchcolor_rus = {"FireBrick":"Красный", "RoyalBlue":"Синий", "Green":"Зеленый",
              "HotPink":"Розовый", "Gold": "Желтый", "Purple":"Фиолетовый",
              "Grey":"Серый","Black":"Черный", "Orange":"Оранжевый"}

total_time = 0

#####
test_language = 'English'

def two_choices (nc):
    choose_color = random.choice(fontcolor)
    choose_text = random.choice(nc)
    global b1
    a1 = "<h1><font color='"
    b1 = choose_color
    result['A1 color'] = b1
    c1 = "'>"
    global d1
    d1 = choose_text
    result['A1 name'] = d1
    e1 ="</font>"

    while choose_color == b1:
        choose_color = random.choice(fontcolor)
    while choose_text == d1:
        choose_text = random.choice(nc)
    global b2
    a2 = "<font color='"
    b2 = choose_color
    result['A2 color'] = b2
    c2 = "'>"
    global d2
    d2 = choose_text
    result['A2 name'] = d2
    e2 ="</font>"

    space = "<font color='white'> space </font>"
    global ans
    ans = a1+b1+c1+d1+e1+space+a2+b2+c2+d2+e2
    
    
    return (ans, b1, b2)

def color_test_question (nc, mc):
    t0 = time.time() # begin timing 
    nc = [b1, b2]
    question_choice = random.choice (nc)
    question_name = mc[question_choice]
    question = "<h2*><font color='black'>Choose the text with the color:</font><b><font color='black'>"+ question_name + "</font>"
    display(HTML(question)) 
    display(HTML(ans)) 
    result['language of test'] = test_language 
    
    user_answer = input ("Enter 'l' or 'r' for your answer:")
    incorrect = 0
    while True: 
        if user_answer == 'l': 
            user_answer = b1
        elif user_answer == 'r':
            user_answer  = b2
        else:
            print ("\nPlease enter correct answer")
        if user_answer == question_choice:
            t1 = time.time()
            global time_taken
            time_taken = t1-t0 # end timing
            global total_time
            total_time = total_time + time_taken 
            result['time taken'] = time_taken
            if incorrect == 0:
                result['incorrect'] = incorrect
            else:
                incorrect = 1 
            break
        else:
            user_answer = input ("Please re-enter the correct answer:")
            incorrect = 1 
            result['incorrect'] = incorrect
    return 


def text_test_question (nc):
    t0 = time.time() # begin timing 
    nc = [d1, d2]
    question_choice = random.choice (nc)
    question = "<h2*><font color='black'>Choose the text with the word:</font><b><font color='black'>"+ question_choice + "</font>"
    display(HTML(question)) 
    display(HTML(ans)) 
    result['language of test'] = test_language 
    
    user_answer = input ("Enter 'l' or 'r' for your answer:")
    incorrect = 0
    while True: 
        if user_answer == 'l': 
            user_answer = d1
        elif user_answer == 'r':
            user_answer  = d2
        else:
            print ("\nPlease enter correct answer")
        if user_answer == question_choice:
            t1 = time.time()
            global time_taken
            time_taken = t1-t0 # end timing
            global total_time
            total_time = total_time + time_taken 
            result['time taken'] = time_taken
            if incorrect == 0:
                result['incorrect'] = incorrect
            else:
                incorrect = 1 
            break
        else:
            user_answer = input ("Please re-enter the correct answer:")
            incorrect = 1 
            result['incorrect'] = incorrect
       
    return 

##### Instructions

results = []
result = {'name': None,
          'language of test': None,
          'proficiency of test language': None,
          'other languages': None,
          'A1 name': None,
          'A1 color': None,
          'A2 name': None,
          'A2 color': None,
          'qnumber' : 0,
          'time taken': None}


title = "<h1> The Stroop Color and Word Test </font>"
display(HTML(title))
name = input("Please enter your name here:")
result['name'] = name 
print  (f"Hello", name, ", This test will consist 20 questions.")
print ("First 10 questions, choose the given text of the color.")
print ("Next 10 questions, choose the given color of the text.")
print ("\nSpecific instructions will appear again, when the question style switches.")    
print ("This will be timed once the question comes out, so take your time reading the instructions.")
print ("If you got an answer wrong, enter the answer again.")

print ("\nHere are  the colors that will be used in this test:")
black = ("<font color='Black '>Black</font>")
red = ("<font color='FireBrick '>Red</font>")
orange = ("<font color='Orange '>Orange</font>")
yellow = ("<font color='Gold '>Yellow</font>")
green = ("<font color='Green '>Green</font>")
blue = ("<font color='RoyalBlue '>Blue</font>")
purple = ("<font color='Purple '>Purple</font>")
pink = ("<font color='HotPink '>Pink</font>")
grey = ("<font color='Grey '>Grey</font>")
space = "<font color='white'> // </font>"

display(HTML(black+space+red+space+orange+space+yellow+space+green+space+blue+space+purple+space+pink+space+grey))

print ("\nHere are examples of what the questions will look like:\n")
display(HTML("<h2*><font color='black'>Choose the text with the color:</font><b><font color='black'>"+ "Green" + "</font>")) 
display (HTML("<h1><font color='Gold'>Red   </font><font color='white'> // </font> <font color='Green'>   Orange</font>"))

display(HTML("<h2*><font color='black'>Choose the text with the word:</font><b><font color='black'>"+ "Green" + "</font>")) 
display (HTML("<h1><font color='Orange'>Black  </font><font color='white'> // </font> <font color='Hotpink'>   Green</font>"))


print ("\nIf the answer on the left is correct, enter l")
print ("If the answer on the right is correct, enter r\n")

print ("In both example questions, the answer on the right is correct")
start = None
start = input ("Type enter, once you are ready to start")

#######

if start == str:
    qnumber = 0
    

for qnumber in range (0,10):
    two_choices (namecolor)
    text_test_question (namecolor)
    qnumber = qnumber + 1
    result['qnumber'] = qnumber
    results.append(result.copy())

print ("\nGreat job, you are half way through the test.")
qstyle2 = "<h4><font color='dimgrey'>For the following 10 questions, select the text with the given</font> <b>color.</font>"
display(HTML(qstyle2))
start = None
start = input ("Type enter, once you are ready to start")

for qnumber in range (10,20):
    two_choices (namecolor)
    color_test_question (namecolor, matchcolor)
    qnumber = qnumber + 1
    result['qnumber'] = qnumber
    results.append(result.copy())
    
    
print ("\nYou have finished your test, here are your results:")
print(f"You finished 20 questions in {total_time}")
first_total_time = total_time

#########
display(HTML("<h3><font color='black'> Please complete the following questions. </font>"))
print ("\n")
display(HTML("<h4><font color='black'>How would you rate your English Proficiency, please enter numeric values:</font>"))
print ("1: Native-speaker, 2: Fluent, 3: Conversational, 4: Novice")
proficiency = input ()
result['proficiency of test language'] = proficiency

print ("\n")
display(HTML("<h4><font color='black'> Do you speak or are familiar with other languages, if so, please type them in the box below.</font>"))
other_languages = input ()
result['other languages'] = other_languages 
results.append(result.copy())

print ("\n")
display(HTML("<h4><font color='black'>  Would you like to take a test in the following languages?</font>"))
another_test = input("Enter y or n")
testrun = 20
 
while another_test == 'y' or another_test == 'Y':    
    display(HTML("<h5><font color='black'>These are the other languages I have made this test in, please choose one if it applies to you:</font>"))
    print ("Chinese, French, Korean, Japanese, Spanish, Russian")
    print ("\nIf not, type n")
    test_language = input()
    print ("\nDisclaimer: I don't speak all of these languages, so I had to rely on google translate")
    print ("I avoided translating the phrases, I apologise in advance if there are errors")

    print ("\nHow would you rate your Proficiency in this language, please enter numeric values:")
    print ("1: Native-speaker, 2: Fluent, 3: Conversational, 4: Novice")
    proficiency = input ()
    result['proficiency of test language'] = proficiency

           
    if test_language == 'Chinese' or test_language == 'chinese':
        nc = namecolor_chn
        mc = matchcolor_chn
    elif test_language == 'French' or test_language == 'french':
        nc = namecolor_fre
        mc = matchcolor_fre
    elif test_language == 'Korean' or test_language == 'korean':
        nc = namecolor_kor
        mc = matchcolor_kor
    elif test_language == 'Japanese' or test_language == 'japanese':
        nc = namecolor_jap
        mc = matchcolor_jap
    elif test_language == 'Spanish' or test_language == 'spanish':
        nc = namecolor_esp
        mc = matchcolor_esp
    elif test_language == 'Russian' or test_language == 'russian':
        nc = namecolor_rus
        mc = matchcolor_rus
    else:
        display(HTML("<h3><font color='black'> Thank you for your participation, you saved me from failing this class</font>"))
        filename = f"{name}_ans_results.csv"
        print (f"Results saved to: '{filename}'")
        break 

    print ("\nThe format of the test will be the same as the English test.")
    qstyle1 = "<h4><font color='dimgrey'>For the first 10 questions, select the given </font> <b>text<b></font> <h4*> of the color.</font>"
    display(HTML(qstyle1))
    start = input ("Type enter, once you are ready to start")
    qnumber = testrun 

    t2 = time.time()
    for qnumber in range (qnumber,qnumber+10):
        two_choices (nc)
        text_test_question (nc)
        qnumber = qnumber + 1
        result['qnumber'] = qnumber
        results.append(result.copy())

    t3 = time.time()
    print ("\nGreat job, you are half way through the test.\n")
    display(HTML(qstyle2))
    start = None
    start = input ("Type enter, once you are ready to start")
    if start == str:
        qnumber = 9
        
    t4 = time.time()
    for qnumber in range (qnumber,qnumber+10):
        two_choices (nc)
        color_test_question (nc,mc)
        qnumber = qnumber + 1
        result['qnumber'] = qnumber
        results.append(result.copy())
    
    t5 = time.time()
    print ("\nYou have finished your test, here are your results:")
    print(f"You finished 20 questions in {(t5-t4)+(t3-t2)}")
    testrun = testrun + 20 
    
    print ("\n")
    display(HTML("<h4><font color='black'> Would you like to take anoter test in another language?</font>"))
    another_test = input("Enter y or n")    
           

else:
    display(HTML("<h3><font color='black'> Thank you for your participation, you saved me from failing this class</font>"))
    filename = f"{name}_ans_results.csv"
    print (f"Results saved to: '{filename}'")


df = pd.DataFrame(results)
df.to_csv(filename)
